{"remainingRequest":"g:\\vue实战\\vue-lat\\node_modules\\babel-loader\\lib\\index.js!g:\\vue实战\\vue-lat\\src\\api\\index.js","dependencies":[{"path":"g:\\vue实战\\vue-lat\\src\\api\\index.js","mtime":1554182812843},{"path":"g:\\vue实战\\vue-lat\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"g:\\vue实战\\vue-lat\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Promise from \"g:\\\\vue\\u5B9E\\u6218\\\\vue-lat\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport axios from \"axios\"; // 设置默认地址\n\naxios.defaults.baseURL = \"http://localhost:3010\"; // 设置请求数据过滤拦截\n\naxios.interceptors.response.use(function (res) {\n  // 只有data的能获取 其他的都拦截\n  return res.data;\n}), function (err) {\n  _Promise.reject(err);\n}; // 导出banner数据接口\n\nexport var getBanner = function getBanner() {\n  return axios.get('/banner');\n}; // 导出列表数据接口\n\nexport var getList = function getList() {\n  return axios.get('/hot');\n}; // 导出列表页\n\nexport var getpage = function getpage(page) {\n  return axios.get(\"/page?page=\".concat(page));\n};",{"version":3,"sources":["g:\\vue实战\\vue-lat\\src\\api\\index.js"],"names":["axios","defaults","baseURL","interceptors","response","use","res","data","err","reject","getBanner","get","getList","getpage","page"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACAA,KAAK,CAACC,QAAN,CAAeC,OAAf,GAAwB,uBAAxB,C,CACA;;AACAF,KAAK,CAACG,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAgC,UAACC,GAAD,EAAO;AACnC;AACA,SAAOA,GAAG,CAACC,IAAX;AACH,CAHD,GAGI,UAACC,GAAD,EAAO;AACP,WAAQC,MAAR,CAAeD,GAAf;AACH,CALD,C,CAMA;;AACA,OAAO,IAAIE,SAAS,GAAG,SAAZA,SAAY,GAAI;AACvB,SAAOV,KAAK,CAACW,GAAN,CAAU,SAAV,CAAP;AACH,CAFM,C,CAGP;;AACA,OAAO,IAAIC,OAAO,GAAG,SAAVA,OAAU,GAAI;AACrB,SAAOZ,KAAK,CAACW,GAAN,CAAU,MAAV,CAAP;AACH,CAFM,C,CAGP;;AACA,OAAO,IAAIE,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAU;AAC3B,SAAOd,KAAK,CAACW,GAAN,sBAAwBG,IAAxB,EAAP;AACH,CAFM","sourcesContent":["import axios from \"axios\"\r\n// 设置默认地址\r\naxios.defaults.baseURL =\"http://localhost:3010\"\r\n// 设置请求数据过滤拦截\r\naxios.interceptors.response.use((res)=>{\r\n    // 只有data的能获取 其他的都拦截\r\n    return res.data\r\n}), (err)=>{\r\n    Promise.reject(err)\r\n}\r\n// 导出banner数据接口\r\nexport let getBanner = ()=>{\r\n    return axios.get('/banner')\r\n}\r\n// 导出列表数据接口\r\nexport let getList = ()=>{\r\n    return axios.get('/hot')\r\n}\r\n// 导出列表页\r\nexport let getpage = (page) => {\r\n    return axios.get(`/page?page=${page}`)\r\n}"]}]}